{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNTS, ACCOUNTS_LOADING, GET_TRANSACTIONS, TRANSACTIONS_LOADING } from \"./types\"; // Actions will go here\n// Add account\n\nexport var addAccount = function addAccount(plaidData) {\n  return function (dispatch) {\n    var accounts = plaidData.accounts;\n    axios.post(\"/api/plaid/accounts/add\", plaidData).then(function (res) {\n      return dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data\n      });\n    }).then(function (data) {\n      return accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Delete account\n\nexport var deleteAccount = function deleteAccount(plaidData) {\n  return function (dispatch) {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      var id = plaidData.id;\n      var newAccounts = plaidData.accounts.filter(function (account) {\n        return account._id !== id;\n      });\n      axios.delete(\"/api/plaid/accounts/\".concat(id)).then(function (res) {\n        return dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id\n        });\n      }).then(newAccounts ? dispatch(getTransactions(newAccounts)) : null).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  };\n}; // Get all accounts for specific user\n\nexport var getAccounts = function getAccounts() {\n  return function (dispatch) {\n    dispatch(setAccountsLoading());\n    axios.get(\"/api/plaid/accounts\").then(function (res) {\n      return dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ACCOUNTS,\n        payload: null\n      });\n    });\n  };\n}; // Accounts loading\n\nexport var setAccountsLoading = function setAccountsLoading() {\n  return {\n    type: ACCOUNTS_LOADING\n  };\n}; // Get Transactions\n\nexport var getTransactions = function getTransactions(plaidData) {\n  return function (dispatch) {\n    dispatch(setTransactionsLoading());\n    axios.post(\"/api/plaid/accounts/transactions\", plaidData).then(function (res) {\n      return dispatch({\n        type: GET_TRANSACTIONS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_TRANSACTIONS,\n        payload: null\n      });\n    });\n  };\n}; // Transactions loading\n\nexport var setTransactionsLoading = function setTransactionsLoading() {\n  return {\n    type: TRANSACTIONS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/amin/Desktop/presentation/openbank/client/src/actions/accountActions.js"],"names":["axios","ADD_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNTS","ACCOUNTS_LOADING","GET_TRANSACTIONS","TRANSACTIONS_LOADING","addAccount","plaidData","dispatch","accounts","post","then","res","type","payload","data","getTransactions","concat","catch","err","console","log","deleteAccount","window","confirm","id","newAccounts","filter","account","_id","delete","getAccounts","setAccountsLoading","get","setTransactionsLoading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n} from \"./types\";\n\n// Actions will go here\n\n// Add account\nexport const addAccount = (plaidData) => (dispatch) => {\n  const accounts = plaidData.accounts;\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data,\n      })\n    )\n    .then((data) =>\n      accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n    )\n    .catch((err) => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = (plaidData) => (dispatch) => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(\n      (account) => account._id !== id\n    );\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then((res) =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id,\n        })\n      )\n      .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n      .catch((err) => console.log(err));\n  }\n};\n\n// Get all accounts for specific user\nexport const getAccounts = () => (dispatch) => {\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"/api/plaid/accounts\")\n    .then((res) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: null,\n      })\n    );\n};\n\n// Accounts loading\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING,\n  };\n};\n\n// Get Transactions\nexport const getTransactions = (plaidData) => (dispatch) => {\n  dispatch(setTransactionsLoading());\n  axios\n    .post(\"/api/plaid/accounts/transactions\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: null,\n      })\n    );\n};\n\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}